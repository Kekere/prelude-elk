[
    {
        "vulExists(_machine, _vulID, _program, _range, _consequence)": [
            "patchVulnerability(_machine, _vulID _program)"
        ]
    },
    {
        "networkServiceInfo(_host, _program, _protocol, _port, _user)": [
            "listHostVulnerabilities(_host)",
            "listHostsCommunicatedInternalDomain(_domain)",
            "listHostsCommunicatedInternalIp(_host)",
            "listHostsCommunicatedInternalUrl(_host)",
            "listHostsCommunicatedPort(_port)",
            "listHostsConnectedVpn(_host)",
            "listHostsConnectedIntranet(_host)",
            "listHostsCommunicatedExternalDomain(_domain)",
            "listHostsCommunicatedExternalIp(_host)",
            "listHostsCommunicatedExternalUrl(_host)",
            "listServicesCreated(_host)",
            "listServicesModified(_host)",
            "listServicesDeleted(_host)",
            "disableSystemService(_host, program)",
            "reinstallHostGoldenImage(_host)",
            "listServicesCreated(_host)",
            "listServicesModified(_host)",
            "listServicesDeleted(_host)",
            "disableSystemService(_host, program)",
            "listServicesCreated(_host)",
            "listServicesModified(_host)",
            "listServicesDeleted(_host)",
            "disableSystemService(_host, program)",
            "listHostsCommunicatedPort(_port)",
            "listServicesCreated(_host)",
            "listServicesModified(_host)",
            "listServicesDeleted(_host)",
            "blockPortExternalCommunication(_port)",
            "blockPortInternalCommunication(_port)",
            "disableSystemService(_host, program)",
            "unblockBlockedPort(_host)",
            "analyseUser-Agent(_principal)",
            "listUsersEmailMessage(_principal)",
            "listServicesCreated(_host)",
            "listServicesModified(_host)",
            "listServicesDeleted(_host)",
            "listUsersAuthenticated(_principal)",
            "blockUserExternalCommunication(_principal)",
            "blockUserInternalCommunication(_principal)",
            "disableSystemService(_host, program)",
            "lockUserAccount(_principal)",
            "removeUserAccount(_principal)",
            "unblockBlockedUser(_principal)",
            "unlockLockedUserAccount(_principal)",
            "listUserAccounts(_principal)"
        ]
    },
    {
        "hacl(_src, _dst, _prot, _port)": [
            "listHostsCommunicatedPort(_port)",
            "blockPortExternalCommunication(_port)",
            "blockPortInternalCommunication(_port)",
            "unblockBlockedPort(_host)"
        ]
    },
    {
        "hasAccount(_principal, _host, _account)": [
            "listHostVulnerabilities(_host)",
            "listHostsCommunicatedInternalDomain(_domain)",
            "listHostsCommunicatedInternalIp(_host)",
            "listHostsCommunicatedInternalUrl(_host)",
            "listHostsCommunicatedPort(_port)",
            "listHostsConnectedVpn(_host)",
            "listHostsConnectedIntranet(_host)",
            "listHostsCommunicatedExternalDomain(_domain)",
            "listHostsCommunicatedExternalIp(_host)",
            "listHostsCommunicatedExternalUrl(_host)",
            "reinstallHostGoldenImage(_host)",
            "putCompromisedAccountsMonitoring(_principal)",
            "lockUserAccount(_principal)",
            "removeUserAccount(_principal)",
            "unlockLockedUserAccount(_principal)",
            "listUserAccounts(_principal)"
        ]
    },
    {
        "nfsExportInfo(_server, _path, _access, _client)": [
            "findFilePath(_host, _path)",
            "findProcessExecutablePath(_host)",
            "quarantineFilePath(_host, _path)",
            "blockProcessExecutablePath(_host)",
            "getAccessControlMatrix(_host, _path)",
            "listRegistryKeysAccessed(_host, _path)"
        ]
    },
    {
        "nfsMounted(_client, _clientpath, _server, _serverpath, _access)": [
            "getAccessControlMatrix(_host, _path)",
            "listRegistryKeysAccessed(_host, _path)"
        ]
    },
    {
        "netAccess(_machine, _protocol, _port)": [
            "listProcessesExecuted(_host)",
            "findProcessExecutablePath(_host)",
            "findProcessExecutableMetadata(_host)",
            "findProcessExecutableHash(_host)",
            "findProcessExecutableFormat(_host)",
            "findProcessExecutableContentPattern(_host)",
            "blockProcessExecutablePath(_host)",
            "blockProcessExecutableMetadata(_host)",
            "blockProcessExecutableHash(_host)",
            "blockProcessExecutableFormat(_host)",
            "blockProcessExecutableContentPattern(_host)",
            "unblockBlockedProcess(_host)",
            "listProcessesExecuted(_host)",
            "findProcessExecutablePath(_host)",
            "findProcessExecutableMetadata(_host)",
            "findProcessExecutableHash(_host)",
            "findProcessExecutableFormat(_host)",
            "findProcessExecutableContentPattern(_host)",
            "blockProcessExecutablePath(_host)",
            "blockProcessExecutableMetadata(_host)",
            "blockProcessExecutableHash(_host)",
            "blockProcessExecutableFormat(_host)",
            "blockProcessExecutableContentPattern(_host)",
            "unblockBlockedProcess(_host)",
            "listHostsCommunicatedPort(_port)",
            "listProcessesExecuted(_host)",
            "findProcessExecutablePath(_host)",
            "findProcessExecutableMetadata(_host)",
            "findProcessExecutableHash(_host)",
            "findProcessExecutableFormat(_host)",
            "findProcessExecutableContentPattern(_host)",
            "blockPortExternalCommunication(_port)",
            "blockPortInternalCommunication(_port)",
            "blockProcessExecutablePath(_host)",
            "blockProcessExecutableMetadata(_host)",
            "blockProcessExecutableHash(_host)",
            "blockProcessExecutableFormat(_host)",
            "blockProcessExecutableContentPattern(_host)",
            "unblockBlockedPort(_host)",
            "unblockBlockedProcess(_host)"
        ]
    },
    {
        "accessFile(_machine, _access, _filepath)": [
            "listProcessesExecuted(_host)",
            "findProcessExecutablePath(_host)",
            "findProcessExecutableMetadata(_host)",
            "findProcessExecutableHash(_host)",
            "findProcessExecutableFormat(_host)",
            "findProcessExecutableContentPattern(_host)",
            "blockProcessExecutablePath(_host)",
            "blockProcessExecutableMetadata(_host)",
            "blockProcessExecutableHash(_host)",
            "blockProcessExecutableFormat(_host)",
            "blockProcessExecutableContentPattern(_host)",
            "unblockBlockedProcess(_host)",
            "getAccessControlMatrix(_host, _path)",
            "listProcessesExecuted(_host)",
            "findProcessExecutablePath(_host)",
            "findProcessExecutableMetadata(_host)",
            "findProcessExecutableHash(_host)",
            "findProcessExecutableFormat(_host)",
            "findProcessExecutableContentPattern(_host)",
            "listRegistryKeysAccessed(_host, _path)",
            "blockProcessExecutablePath(_host)",
            "blockProcessExecutableMetadata(_host)",
            "blockProcessExecutableHash(_host)",
            "blockProcessExecutableFormat(_host)",
            "blockProcessExecutableContentPattern(_host)",
            "unblockBlockedProcess(_host)",
            "listProcessesExecuted(_host)",
            "findProcessExecutablePath(_host)",
            "findProcessExecutableMetadata(_host)",
            "findProcessExecutableHash(_host)",
            "findProcessExecutableFormat(_host)",
            "findProcessExecutableContentPattern(_host)",
            "blockProcessExecutablePath(_host)",
            "blockProcessExecutableMetadata(_host)",
            "blockProcessExecutableHash(_host)",
            "blockProcessExecutableFormat(_host)",
            "blockProcessExecutableContentPattern(_host)",
            "unblockBlockedProcess(_host)"
        ]
    },
    {
        "execCode(_host, _user)": [
            "listHostVulnerabilities(_host)",
            "listHostsCommunicatedInternalDomain(_domain)",
            "listHostsCommunicatedInternalIp(_host)",
            "listHostsCommunicatedInternalUrl(_host)",
            "listHostsCommunicatedPort(_port)",
            "listHostsConnectedVpn(_host)",
            "listHostsConnectedIntranet(_host)",
            "listHostsCommunicatedExternalDomain(_domain)",
            "listHostsCommunicatedExternalIp(_host)",
            "listHostsCommunicatedExternalUrl(_host)",
            "listProcessesExecuted(_host)",
            "findProcessExecutablePath(_host)",
            "findProcessExecutableMetadata(_host)",
            "findProcessExecutableHash(_host)",
            "findProcessExecutableFormat(_host)",
            "findProcessExecutableContentPattern(_host)",
            "blockProcessExecutablePath(_host)",
            "blockProcessExecutableMetadata(_host)",
            "blockProcessExecutableHash(_host)",
            "blockProcessExecutableFormat(_host)",
            "blockProcessExecutableContentPattern(_host)",
            "reinstallHostGoldenImage(_host)",
            "unblockBlockedProcess(_host)",
            "analyseUser-Agent(_principal)",
            "listUsersEmailMessage(_principal)",
            "listProcessesExecuted(_host)",
            "findProcessExecutablePath(_host)",
            "findProcessExecutableMetadata(_host)",
            "findProcessExecutableHash(_host)",
            "findProcessExecutableFormat(_host)",
            "findProcessExecutableContentPattern(_host)",
            "listUsersAuthenticated(_principal)",
            "blockUserExternalCommunication(_principal)",
            "blockUserInternalCommunication(_principal)",
            "blockProcessExecutablePath(_host)",
            "blockProcessExecutableMetadata(_host)",
            "blockProcessExecutableHash(_host)",
            "blockProcessExecutableFormat(_host)",
            "blockProcessExecutableContentPattern(_host)",
            "lockUserAccount(_principal)",
            "removeUserAccount(_principal)",
            "unblockBlockedUser(_principal)",
            "unblockBlockedProcess(_host)",
            "unlockLockedUserAccount(_principal)",
            "listUserAccounts(_principal)"
        ]
    }
]