#!/bin/bash

set -eu

echo "Preparing files required to access the database"
ALERTS_DB_PASS=$(cat "${ALERTS_DB_PASSWORD_FILE}")
GUI_DB_PASS=$(cat "${GUI_DB_PASSWORD_FILE}")
touch                                                            ~root/.pgpass
chmod 0600                                                       ~root/.pgpass
chown root:root                                                  ~root/.pgpass
printf "db-alerts:5432:prelude:prelude:%s\n" "$ALERTS_DB_PASS" > ~root/.pgpass
printf "db-gui:5432:prewikka:prewikka:%s\n"  "$GUI_DB_PASS"   >> ~root/.pgpass
install -o apache -g apache -m 0600 ~root/.pgpass ~apache/

# Make sure we're not confused by old, incompletely-shutdown httpd
# context after restarting the container.  httpd won't start correctly
# if it thinks it is already running.
rm -rf /run/httpd/* /tmp/httpd*

# Wait for the databases to come online
while [ true ]; do
    echo "Waiting for the IDMEF database to come online..."
    res=`psql -U prelude -h db-alerts -Antq -c '\d' >/dev/null && echo "OK" || echo "NOK"`
    if [ "$res" = "OK" ]; then
        break
    fi
    sleep 1
done

while [ true ]; do
    echo "Waiting for the GUI database to come online..."
    res=`psql -U prewikka -h db-gui -Antq -c '\d' >/dev/null && echo "OK" || echo "NOK"`
    if [ "$res" = "OK" ]; then
        break
    fi
    sleep 1
done

while [ true ]; do
    echo "Waiting for the logs' database to come online..."
    res=`curl -s -o /dev/null http://db-logs:9200 && echo "OK" || echo "NOK"`
    if [ "$res" = "OK" ]; then
        break
    fi
    sleep 5
done

prelude-wait4injector

TZ="${SYSLOG_TIMEZONE-UTC}" logger -it prewikka-container --rfc3164 -T -P 6514 -n injector Starting Prelude GUI
echo "Starting the HTTP daemon"
exec /usr/sbin/apachectl -DFOREGROUND
